plugins {
    id 'java-base'
    id "org.sonarqube" version "3.4.0.2513"
    id 'com.avast.gradle.docker-compose' version '0.16.12'
}
wrapper {
    gradleVersion = gradlewVersion
}

dockerCompose {
    useComposeFiles = ['docker-compose.yml']
    waitForTcpPorts = false
}
sonarqube {
    properties {
        property 'sonar.host.url', 'http://localhost:9000'
        property 'sonar.login', 'admin'
        property 'sonar.token', 'sqa_986eb8dfc6c45e522d4cc7e417c975fbd05bf44f'
        property 'sonar.password', 'password_admin'
        property 'sonar.projectKey', 'testtest'
        property 'sonar.projectName', 'CI/CD task'
        property 'sonar.java.source', 17
        property 'sonar.junit.reportPaths', 'build/results'
        property 'encoding', 'UTF-8'
        property 'charSet', 'UTF-8'
    }
}
subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply plugin: 'com.avast.gradle.docker-compose'
    group = 'com.mjc.school'


    repositories {
        mavenCentral()
    }


    dependencies {
        implementation "org.springframework:spring-context:$springVersion"
        implementation "org.springframework.boot:spring-boot-starter-data-jpa:2.7.7"
        implementation 'org.springframework:spring-aop:4.1.6.release'
        implementation 'org.aspectj:aspectjweaver:1.9.19'
        testImplementation 'io.rest-assured:rest-assured:5.3.0'

        testImplementation 'org.mockito:mockito-junit-jupiter:4.11.0'
        testImplementation 'org.mockito:mockito-core:4.11.0'

        testImplementation "org.springframework:spring-test:$springVersion"
        testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiterVersion"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiterVersion"
        testImplementation "com.tngtech.archunit:archunit-junit5:1.0.0"
        compileOnly 'org.projectlombok:lombok:1.18.24'
        annotationProcessor 'org.projectlombok:lombok:1.18.24'
        testCompileOnly 'org.projectlombok:lombok:1.18.24'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
        implementation group: 'com.h2database', name: 'h2', version: '2.1.214'
        
        implementation group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.9.0'

        implementation group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.0'

        implementation 'org.slf4j:slf4j-simple:2.0.7'

        testImplementation 'org.assertj:assertj-core:3.24.2'
        implementation 'org.springframework.boot:spring-boot-starter-web:2.7.7'
        implementation 'org.springframework.boot:spring-boot-starter-validation:2.7.7'

        implementation 'com.google.code.gson:gson:2.10.1'
        implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
        implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
        implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'


    }
    test {
        useJUnitPlatform()
    }
    task repack(type: Jar, dependsOn: ':module-main:build') {
        if (findProject(':module-main') != null) {
            entryCompression = ZipEntryCompression.STORED
            def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main.jar")
            from(buildJar) { into('/') }
            manifest {
                attributes(
                        'Main-Class': 'com.mjc.school.Main'
                )
            }
        }
    }
}